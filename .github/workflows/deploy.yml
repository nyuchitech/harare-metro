name: Deploy Harare Metro

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Deploy daily at 6 AM UTC to ensure fresh content
    - cron: '0 6 * * *'

jobs:
  deploy-worker:
    runs-on: ubuntu-latest
    name: Deploy Cloudflare Worker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            npx wrangler deploy
          else
            npx wrangler deploy --env staging
          fi

  deploy-pages:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    needs: deploy-worker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update API endpoint in HTML
        run: |
          WORKER_URL="https://harare-metro.${{ secrets.CLOUDFLARE_DOMAIN }}"
          if [ "${{ github.ref }}" != "refs/heads/main" ]; then
            WORKER_URL="https://harare-metro-staging.${{ secrets.CLOUDFLARE_DOMAIN }}"
          fi
          sed -i "s|YOUR_WORKER_URL|$WORKER_URL|g" index.html
          sed -i "s|YOUR_WORKER_URL|$WORKER_URL|g" privacy.html
          sed -i "s|YOUR_WORKER_URL|$WORKER_URL|g" terms.html

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: harare-metro
          directory: .
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
  
  test-deployment:
    runs-on: ubuntu-latest
    name: Test Deployment
    needs: [deploy-worker, deploy-pages]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Test Worker API
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" "https://harare-metro-worker.nyuchi.workers.dev/api/news")
          if [ $response -eq 200 ]; then
            echo "✅ Worker API is responding correctly"
          else
            echo "❌ Worker API failed with status $response"
            exit 1
          fi

      - name: Test Pages Deployment
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -A "Mozilla/5.0" "https://www.hararemetro.co.zw")
          echo "HTTP Status: $response"
          if [[ "$response" == "200" ]]; then
            echo "✅ Site is loading correctly"
          else
            echo "❌ Site failed with status $response"
            exit 1
          fi

