name: Deploy Harare Metro

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Both Projects
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js for frontend
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install frontend dependencies
      run: npm install
        
    - name: Test frontend build
      run: npm run test
      
    - name: Setup Node.js for backend
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm install
        
    - name: Test backend build
      run: |
        cd backend
        # Clean up any conflicting wrangler configs
        rm -rf ../.wrangler/deploy/ || true
        npm run test

  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm install
        
    - name: Deploy backend to Cloudflare
      run: |
        cd backend
        # Clean up any conflicting wrangler configs
        rm -rf ../.wrangler/deploy/ || true
        # Set secrets before deploying
        echo "${{ secrets.SUPABASE_SERVICE_KEY }}" | npx wrangler secret put SUPABASE_SERVICE_KEY
        echo "${{ secrets.SUPABASE_URL }}" | npx wrangler secret put SUPABASE_URL
        if [ -n "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
          echo "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" | npx wrangler secret put CLOUDFLARE_ACCOUNT_ID
        fi
        npm run deploy
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend
    needs: [test, deploy-backend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install frontend dependencies
      run: npm install
        
    - name: Deploy frontend to Cloudflare
      run: npm run deploy
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  test-deployments:
    runs-on: ubuntu-latest
    name: Test Deployments
    needs: [deploy-backend, deploy-frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Test backend health
      run: |
        echo "Testing backend health..."
        response=$(curl -s -o /dev/null -w "%{http_code}" https://admin.hararemetro.co.zw/api/health)
        if [ $response -eq 200 ]; then
          echo "✅ Backend is healthy!"
        else
          echo "❌ Backend health check failed (HTTP $response)"
          exit 1
        fi
        
    - name: Test frontend
      run: |
        echo "Testing frontend..."
        response=$(curl -s -o /dev/null -w "%{http_code}" https://www.hararemetro.co.zw)
        if [ $response -eq 200 ]; then
          echo "✅ Frontend is accessible!"
        else
          echo "❌ Frontend health check failed (HTTP $response)"
          exit 1
        fi